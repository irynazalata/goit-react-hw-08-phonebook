{"version":3,"sources":["components/ContactsList/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","shared/Notification/Notification.module.css","shared/Title/Title.module.css","components/ContactsList/ContactsList.module.css","shared/Title/Title.js","redux/actions/contactsAction.js","shared/Notification/Notification.js","components/Form/Form.js","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","redux/actions/filterAction.js","components/Filter/Filter.js","App.js","redux/reducers/contactsReducer.js","redux/reducers/filterReducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Title","title","CSSTransition","in","appear","timeout","classNames","styles","className","addContact","createAction","deleteContact","Notification","contactExists","unmountOnExit","container","text","Form","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","contacts","find","setTimeout","this","form","onSubmit","label","type","onChange","placeholder","input","required","button","Component","mapDispatchToProps","contactsAction","connect","ownProps","item","dispatch","contactAction","btn","onClick","filter","searchContact","toLowerCase","includes","TransitionGroup","component","list","map","filterContacts","filterContact","length","App","INITIAL_STATE","JSON","parse","localStorage","getItem","contactReducer","createReducer","actions","action","newContacts","payload","setItem","stringify","renewedContacts","filterReducer","_","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6e45c30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsListItem_item__3oKCD\",\"contact\":\"ContactsListItem_contact__1askL\",\"btn\":\"ContactsListItem_btn__3Ngwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1Jfe4\",\"label\":\"Filter_label__2infJ\",\"input\":\"Filter_input__3T69o\",\"enter\":\"Filter_enter__2DqRh\",\"enterActive\":\"Filter_enterActive__1eHX8\",\"exit\":\"Filter_exit__2NHgy\",\"exitActive\":\"Filter_exitActive__1b_70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2VqGn\",\"text\":\"Notification_text__3tl8r\",\"enter\":\"Notification_enter__pRFHN\",\"enterActive\":\"Notification_enterActive__1aE_R\",\"exit\":\"Notification_exit__TvRfU\",\"exitActive\":\"Notification_exitActive__1-NKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__3kDeB\",\"appear\":\"Title_appear__2q3aa\",\"appearActive\":\"Title_appearActive__25ckZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2UFRJ\",\"enter\":\"ContactsList_enter__346uG\",\"enterActive\":\"ContactsList_enterActive__3GtBn\",\"exit\":\"ContactsList_exit__1NArQ\",\"exitActive\":\"ContactsList_exitActive__1Gmf5\"};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Title.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <CSSTransition in={true} appear={true} timeout={500} classNames={styles}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Title;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n// import types from '../action-types';\r\n\r\n// без redux toolkit\r\n// const addContact = ({ id, name, number }) => ({\r\n//   type: types.ADD_CONTACT,\r\n//   payload: {\r\n//     id: id,\r\n//     name: name,\r\n//     number: number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = id => ({\r\n//   type: types.DELETE_CONTACT,\r\n//   payload: {\r\n//     id,\r\n//   },\r\n// });\r\n\r\nconst addContact = createAction('ADD_CONTACT');\r\nconst deleteContact = createAction('DELETE_CONTACT');\r\n\r\nexport default { addContact, deleteContact };\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ contactExists }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={contactExists}\r\n      appear={true}\r\n      timeout={250}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.container}>\r\n        <p className={styles.text}>Contact already exists!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport styles from './Form.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/actions/contactsAction';\r\nimport Notification from '../../shared/Notification/Notification';\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    contactExists: false,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if (this.props.contacts.find(({ name }) => name === contact.name)) {\r\n      this.setState({ contactExists: true });\r\n      setTimeout(() => this.setState({ contactExists: false }), 1500);\r\n      return;\r\n    }\r\n    this.props.addContact(contact);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number, contactExists } = this.state;\r\n    return (\r\n      <>\r\n        <Notification contactExists={contactExists} />\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter your full name\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"xxx-xx-xx\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n          <input type=\"submit\" value=\"Add contact\" className={styles.button} />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsAction.addContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactAction from '../../../redux/actions/contactsAction';\r\nimport styles from './ContactsListItem.module.css';\r\n\r\nconst ContactsListItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.contact}>{name}</p>\r\n      <p className={styles.contact}>{number}</p>\r\n      <button type=\"button\" className={styles.btn} onClick={deleteContact}>\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.find(item => item.id === ownProps.id);\r\n  return {\r\n    ...item,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () => dispatch(contactAction.deleteContact(ownProps.id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './ContactsList.module.css';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ searchContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {searchContact.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={styles}>\r\n            <ContactsListItem id={id}></ContactsListItem>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  searchContact: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { contacts, filter } = state;\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n  return {\r\n    searchContact: filteredContacts,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(ContactsList);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n// import types from '../action-types';\r\n\r\n// без redux toolkit\r\n// const filterContacts = value => ({\r\n//   type: types.FILTER_CONTACTS,\r\n//   payload: {\r\n//     value,\r\n//   },\r\n// });\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport default filterContacts;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport filterContacts from '../../redux/actions/filterAction';\r\n\r\nconst Filter = ({ filter, filterContact, contacts }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={contacts.length > 1}\r\n      appear={true}\r\n      timeout={250}\r\n      unmountOnExit\r\n      classNames={styles}\r\n    >\r\n      <div className={styles.container}>\r\n        <label className={styles.label}>\r\n          Find contacts by name\r\n          <input\r\n            className={styles.input}\r\n            onChange={event => filterContact(event.target.value)}\r\n            value={filter}\r\n          />\r\n        </label>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: state.filter,\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  filterContact: filterContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport Title from './shared/Title/Title';\nimport Form from './components/Form/Form';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <Title title=\"phonebook\" />\n      <Form />\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default App;\n","// import types from '../action-types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from '../actions/contactsAction';\r\n\r\nconst INITIAL_STATE = JSON.parse(localStorage.getItem('contacts')) || [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n// без redux toolkit\r\n// const contactReducer = (state = INITIAL_STATE, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD_CONTACT:\r\n//       const newContacts = [...state, payload];\r\n//       localStorage.setItem('contacts', JSON.stringify(newContacts));\r\n//       return newContacts;\r\n\r\n//     case types.DELETE_CONTACT:\r\n//       const renewedContacts = state.filter(\r\n//         contact => contact.id !== payload.id,\r\n//       );\r\n//       localStorage.setItem('contacts', JSON.stringify(renewedContacts));\r\n//       return renewedContacts;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst addContact = (state, action) => {\r\n  const newContacts = [...state, action.payload];\r\n  localStorage.setItem('contacts', JSON.stringify(newContacts));\r\n  return newContacts;\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  const renewedContacts = state.filter(\r\n    contact => contact.id !== action.payload,\r\n  );\r\n  localStorage.setItem('contacts', JSON.stringify(renewedContacts));\r\n  return renewedContacts;\r\n};\r\n\r\nconst contactReducer = createReducer(INITIAL_STATE, {\r\n  [actions.addContact]: addContact,\r\n  [actions.deleteContact]: deleteContact,\r\n});\r\n\r\nexport default contactReducer;\r\n","// import types from '../action-types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport filterContacts from '../actions/filterAction';\r\n\r\n// без redux toolkit\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER_CONTACTS:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","// import { createStore, combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contacts from './reducers/contactsReducer';\r\nimport filter from './reducers/filterReducer';\r\n\r\n// без redux toolkit\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactReducer,\r\n//   filter: filterReducer,\r\n// });\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts,\r\n    filter,\r\n  },\r\n});\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3MoSp\",\"label\":\"Form_label__2_cqM\",\"input\":\"Form_input__3PJAV\",\"button\":\"Form_button__1Lywy\"};"],"sourceRoot":""}