{"version":3,"sources":["components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","shared/Layout/Layout.js","App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/store.js","index.js","redux/contacts/contactsSelectors.js","components/Form/Form.module.css","redux/auth/authOperations.js","redux/auth/authSelectors.js","redux/contacts/index.js","components/ContactsList/ContactsListItem/ContactsListItem.module.css","components/Filter/Filter.module.css","redux/auth/authReducers.js","redux/filter/filterAction.js","shared/Notification/Notification.module.css","redux/contacts/contactsOperations.js","shared/Title/Title.module.css","components/ContactsList/ContactsList.module.css","shared/Loader/Loader.js","routes.js","redux/auth/authActions.js","shared/Loader/Loader.module.css","shared/Layout/Layout.module.css","shared/Title/Title.js","components/Filter/Filter.js","shared/Notification/Notification.js","components/Form/Form.js","redux/contacts/contactsAction.js","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js"],"names":["connect","state","isAuthenticated","authSelectors","Component","component","routeProps","render","props","to","restricted","Layout","children","className","styles","container","App","this","onGetCurrentUser","fallback","Loader","routes","map","route","idx","private","authOperations","getCurrentUser","contactReducer","createReducer","fetchContactsSuccess","action","payload","addContactSuccess","deleteContactSuccess","filter","contact","id","loading","addContactRequest","addContactError","fetchContactsRequest","fetchContactsError","deleteContactRequest","deleteContactError","filterReducer","filterContacts","_","authPersistConfig","key","storage","whitelist","rootReducer","auth","persistReducer","authReducer","contacts","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","getContacts","getFilter","getFilteredContacts","createSelector","name","toLowerCase","includes","getContactById","contactId","find","getLoading","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","console","log","data","registerSuccess","catch","error","registerError","login","loginRequest","loginSuccess","loginError","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","logout","logoutRequest","logoutSuccess","logoutError","getUserEmail","user","email","initialState","combineReducers","createAction","addContact","number","fetchContacts","deleteContact","delete","InfoLoader","loader","type","color","height","width","exact","path","lazy","Title","title","in","appear","timeout","classNames","mapDispatchToProps","filterContact","contactsSelectors","length","unmountOnExit","label","input","onChange","event","target","value","Notification","contactExists","CSSTransition","text","Form","handleChange","setState","handleSubmit","preventDefault","setTimeout","form","onSubmit","placeholder","required","button","contactsOperations","ownProps","item","btn","onClick","searchContact","TransitionGroup","list"],"mappings":"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","file":"static/js/main.481593c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport Title from './shared/Title/Title';\nimport Loader from './shared/Loader/Loader';\nimport Layout from './shared/Layout/Layout';\nimport Form from './components/Form/Form';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport contactsOperations from './redux/contacts/contactsOperations';\nimport contactsSelectors from './redux/contacts/contactsSelectors';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport routes from './routes';\nimport { authOperations } from './redux/auth';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.private ? (\n                <PrivateRoute key={idx} {...route} />\n              ) : (\n                <PublicRoute\n                  key={idx}\n                  {...route}\n                  restricted={route.restricted}\n                />\n              );\n            })}\n          </Switch>\n        </Suspense>\n      </Layout>\n    );\n  }\n}\n\nexport default connect(null, {\n  onGetCurrentUser: authOperations.getCurrentUser,\n})(App);\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contactsAction';\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst contactReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: addContact,\r\n  [deleteContactSuccess]: deleteContact,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport { contactReducer, loading };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport filterContacts from './filterAction';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactReducer, loading } from './contacts/contactsReducer';\r\nimport filter from './filter/filterReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport authReducer from './auth/authReducers';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst rootReducer = {\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: contactReducer,\r\n  filter,\r\n  loading,\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [...getDefaultMiddleware({ serializableCheck: false })],\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.loading;\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactById = createSelector(\r\n  [(_, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => {\r\n    return contacts.find(contact => contact.id === contactId);\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  getContactById,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__7B3DZ\",\"label\":\"Form_label__1Q1xH\",\"input\":\"Form_input__1CqXv\",\"button\":\"Form_button__30Yhs\"};","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      console.log(response.data);\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst login = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  // console.log(credentials);\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => {\r\n      dispatch(authActions.getCurrentUserSuccess(data));\r\n    })\r\n    .catch(error => dispatch(authActions.getCurrentUserError(error)));\r\n};\r\n\r\nconst logout = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\nexport default { register, login, getCurrentUser, logout };\r\n","const isAuthenticated = state => state.auth.token;\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nexport default { isAuthenticated, getUserEmail };\r\n","export { default as contactsOperations } from './contactsOperations';\r\nexport { default as contactsSelectors } from './contactsSelectors';\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsListItem_item__18RMc\",\"contact\":\"ContactsListItem_contact__3lgYE\",\"btn\":\"ContactsListItem_btn__3t6Tb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__35JP8\",\"label\":\"Filter_label__3KDJC\",\"input\":\"Filter_input__ihpZJ\",\"enter\":\"Filter_enter__35nQC\",\"enterActive\":\"Filter_enterActive__2jnFC\",\"exit\":\"Filter_exit__DwQGY\",\"exitActive\":\"Filter_exitActive__Fj4J4\"};","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialState = {\r\n  name: null,\r\n  email: null,\r\n};\r\n\r\nconst user = createReducer(initialState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterContacts = createAction('FILTER_CONTACTS');\r\n\r\nexport default filterContacts;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2ilXH\",\"text\":\"Notification_text__2kKkn\",\"enter\":\"Notification_enter__3Do9k\",\"enterActive\":\"Notification_enterActive__2VJN_\",\"exit\":\"Notification_exit__Q_4vR\",\"exitActive\":\"Notification_exitActive__BUjjg\"};","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contactsAction';\r\n\r\naxios.defaults.baseURL = 'http://localhost:2000';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\nexport default { addContact, fetchContacts, deleteContact };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__Jpt7i\",\"appear\":\"Title_appear__15uIa\",\"appearActive\":\"Title_appearActive__2d5Bd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3dMBp\",\"enter\":\"ContactsList_enter__pAWyi\",\"enterActive\":\"ContactsList_enterActive__1fUVb\",\"exit\":\"ContactsList_exit__2qlk3\",\"exitActive\":\"ContactsList_exitActive__2WNcs\"};","import React from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nconst InfoLoader = () => {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Loader type=\"ThreeDots\" color=\"#f1392d\" height={50} width={50} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoLoader;\r\n","import { lazy } from 'react';\r\n\r\nconst routes = [\r\n  {\r\n    exact: true,\r\n    path: '/',\r\n    name: 'Home',\r\n    component: lazy(() => import('./pages/Home/Home')),\r\n    private: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: lazy(() => import('./pages/Registration/Registration')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: lazy(() => import('./pages/Loginization/Loginization')),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: '/contacts',\r\n    name: 'Contacts',\r\n    component: lazy(() => import('./pages/Contacts/Contacts')),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__O8fZE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__2GlEm\"};","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Title.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title }) => {\r\n  return (\r\n    <CSSTransition in={true} appear={true} timeout={500} classNames={styles}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Title;\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport filterContacts from '../../redux/filter/filterAction';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ filter, filterContact, contacts }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={contacts.length > 1}\r\n      appear={true}\r\n      timeout={250}\r\n      unmountOnExit\r\n      classNames={styles}\r\n    >\r\n      <div className={styles.container}>\r\n        <label className={styles.label}>\r\n          Find contacts by name\r\n          <input\r\n            className={styles.input}\r\n            onChange={event => filterContact(event.target.value)}\r\n            value={filter}\r\n          />\r\n        </label>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: contactsSelectors.getFilter(state),\r\n    contacts: contactsSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  filterContact: filterContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ contactExists }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={contactExists}\r\n      appear={true}\r\n      timeout={250}\r\n      classNames={styles}\r\n      unmountOnExit\r\n    >\r\n      <div className={styles.container}>\r\n        <p className={styles.text}>Contact already exists!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport Notification from '../../shared/Notification/Notification';\r\nimport styles from './Form.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Form extends Component {\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    contactExists: false,\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if (this.props.contacts.find(({ name }) => name === contact.name)) {\r\n      this.setState({ contactExists: true });\r\n      setTimeout(() => this.setState({ contactExists: false }), 1500);\r\n      return;\r\n    }\r\n    this.props.addContact(contact);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name, number, contactExists } = this.state;\r\n    return (\r\n      <>\r\n        <Notification contactExists={contactExists} />\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              name=\"name\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"Enter your full name\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              name=\"number\"\r\n              onChange={this.handleChange}\r\n              placeholder=\"xxx-xx-xx\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n          </label>\r\n          <input type=\"submit\" value=\"Add contact\" className={styles.button} />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: contactsOperations.addContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('ADD_CONTACT_REQUEST');\r\nconst addContactSuccess = createAction('ADD_CONTACT_SUCCESS');\r\nconst addContactError = createAction('ADD_CONTACT_ERROR');\r\n\r\nconst fetchContactsRequest = createAction('FETCH_CONTACTS_REQUEST');\r\nconst fetchContactsSuccess = createAction('FETCH_CONTACTS_SUCCESS');\r\nconst fetchContactsError = createAction('FETCH_CONTACTS_ERROR');\r\n\r\nconst deleteContactRequest = createAction('DELETE_CONTACT_REQUEST');\r\nconst deleteContactSuccess = createAction('DELETE_CONTACT_SUCCESS');\r\nconst deleteContactError = createAction('DELETE_CONTACT_ERROR');\r\n\r\nexport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../../redux/contacts';\r\nimport styles from './ContactsListItem.module.css';\r\n\r\nconst ContactsListItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.contact}>{name}</p>\r\n      <p className={styles.contact}>{number}</p>\r\n      <button type=\"button\" className={styles.btn} onClick={deleteContact}>\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactsSelectors.getContactById(state, ownProps.id);\r\n  return { ...contact };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () => dispatch(contactsOperations.deleteContact(ownProps.id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport styles from './ContactsList.module.css';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ searchContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {searchContact.map(({ id }) => {\r\n        return (\r\n          <CSSTransition key={id} timeout={250} classNames={styles}>\r\n            <ContactsListItem id={id}></ContactsListItem>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  searchContact: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchContact: contactsSelectors.getFilteredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactsList);\r\n"],"sourceRoot":""}